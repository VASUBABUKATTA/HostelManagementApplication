package com.hostelManagementApplication.hostel.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;

@Entity
@Table(name = "hostler")
public class Hostler {

	@Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long hostlerId;

	 @NotBlank(message = "Hostler mobile number cannot be blank")
	    @Pattern(regexp = "^[0-9]{10}$", message = "Hostler mobile number must be 10 digits")
	    private String hostlerMobile;

	    @NotBlank(message = "Hostler name is required")
	    @Size(min = 2, max = 50, message = "Hostler name must be between 2 and 50 characters")
	    private String hostlerName;

	    @NotBlank(message = "Hostler email is required")
	    @Email(message = "Hostler email must be a valid email address")
	    private String hostlerEmail;

	    @NotBlank(message = "Hostler's father name is required")
	    @Size(min = 2, max = 50, message = "Father's name must be between 2 and 50 characters")
	    private String hostlerFatherName;

	    @NotBlank(message = "Hostler address is required")
	    @Size(min = 5, max = 200, message = "Hostler address must be between 5 and 200 characters")
	    private String hostlerAddress;

	    @NotBlank(message = "Hostler college name is required")
	    @Size(min = 2, max = 100, message = "College name must be between 2 and 100 characters")
	    private String hostlerCollegeName;

	    @NotBlank(message = "Hostler room number is required")
//	    @Pattern(regexp = "^[0-9A-Za-z-]+$", message = "Hostler room number must be alphanumeric")
	    private String hostlerRoomNo;

    @ManyToOne
    @JoinColumn(name = "hostel_id")
    private Hostel hostel;
//    
//    @OneToMany(mappedBy = "hostler")
//    private List<HostlerFee> hostlerFees;

    
    
//    public List<HostlerFee> getHostlerFees() {
//		return hostlerFees;
//	}
//
//	public void setHostlerFees(List<HostlerFee> hostlerFees) {
//		this.hostlerFees = hostlerFees;
//	}
//	

	// Getters and Setters
    public long getHostlerId() {
        return hostlerId;
    }

    public void setHostlerId(long hostlerId) {
        this.hostlerId = hostlerId;
    }

    public String getHostlerMobile() {
        return hostlerMobile;
    }

    public void setHostlerMobile(String hostlerMobile) {
        this.hostlerMobile = hostlerMobile;
    }

    public String getHostlerName() {
        return hostlerName;
    }

    public void setHostlerName(String hostlerName) {
        this.hostlerName = hostlerName;
    }

    public String getHostlerEmail() {
        return hostlerEmail;
    }

    public void setHostlerEmail(String hostlerEmail) {
        this.hostlerEmail = hostlerEmail;
    }

    public String getHostlerFatherName() {
        return hostlerFatherName;
    }

    public void setHostlerFatherName(String hostlerFatherName) {
        this.hostlerFatherName = hostlerFatherName;
    }

    public String getHostlerAddress() {
        return hostlerAddress;
    }

    public void setHostlerAddress(String hostlerAddress) {
        this.hostlerAddress = hostlerAddress;
    }

    public String getHostlerCollegeName() {
        return hostlerCollegeName;
    }

    public void setHostlerCollegeName(String hostlerCollegeName) {
        this.hostlerCollegeName = hostlerCollegeName;
    }

    public String getHostlerRoomNo() {
        return hostlerRoomNo;
    }

    public void setHostlerRoomNo(String hostlerRoomNo) {
        this.hostlerRoomNo = hostlerRoomNo;
    }

    public Hostel getHostel() {
        return hostel;
    }

    public void setHostel(Hostel hostel) {
        this.hostel = hostel;
    }

    // Constructors
    public Hostler(long hostlerId, String hostlerMobile, String hostlerName, String hostlerEmail,
                   String hostlerFatherName, String hostlerAddress, String hostlerCollegeName, 
                   String hostlerRoomNo
                   , Hostel hostel
                   ) {
        this.hostlerId = hostlerId;
        this.hostlerMobile = hostlerMobile;
        this.hostlerName = hostlerName;
        this.hostlerEmail = hostlerEmail;
        this.hostlerFatherName = hostlerFatherName;
        this.hostlerAddress = hostlerAddress;
        this.hostlerCollegeName = hostlerCollegeName;
        this.hostlerRoomNo = hostlerRoomNo;
        this.hostel = hostel;
    }

    public Hostler() {
        // Default constructor
    }
}
